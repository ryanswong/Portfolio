---
import Tag from "./Tag.astro";
import { Image } from "astro:assets";

export interface Props {
  title: string;
  subtitle?: string;
  image: ImageMetadata;
  alt: string;
  tags?: string[];
  swapSides?: boolean; // only matters for desktop version
}
const {
  title,
  subtitle,
  tags,
  image,
  alt = "",
  swapSides = false,
} = Astro.props;

const descriptionBgColor =
  "bg-gray-200 bg-opacity-80 dark:bg-gray-700 dark:bg-opacity-80";
const tagsStyle = `w-3/5 flex flex-wrap gap-2 ${
  swapSides ? "justify-end ml-auto" : ""
}`;
---

<!-- mobile size -->
<div class="md:hidden w-full">
  <div class="relative h-contain">
    <!-- Image -->
    <Image src={image} alt={alt} class="object-contain" />
    <!-- <img class="object-contain" src={image} alt="" /> -->

    <div
      class="absolute top-0 bg-white bg-opacity-50 dark:bg-black dark:bg-opacity-50 w-full py-2 px-4"
    >
      <!-- Title -->
      <h3 class=`text-2xl font-medium`>
        {title}
      </h3>
      <!-- Subtitle -->
      {subtitle && <p class="text-sm">{subtitle}</p>}
    </div>
  </div>

  <div class=`${descriptionBgColor} px-4 pt-2 pb-6`>
    <!-- Description -->
    <!-- <p>{description}</p> -->
    <slot name="description" />

    <!-- Tags -->
    {
      tags && (
        <div class="flex flex-wrap gap-2 mt-4">
          {tags.map((tag) => (
            <Tag text={tag} additionalStyles="shadow-lg py-0.5 px-2" />
          ))}
        </div>
      )
    }
  </div>
</div>

<!-- desktop size -->
<div class="relative hidden md:block">
  <!-- Image Side -->
  <div
    class=`absolute object-contain w-3/5 top-0 ${swapSides ? "left-0" : "right-0"}`
  >
    <Image src={image} alt={alt} />
  </div>

  <!-- Text Side (text left side on default)-->
  <div
    class=`w-full relative flex flex-col space-y-4 ${swapSides ? "" : "ml-auto"}`
  >
    <!-- Title + Subtitle -->
    <div class=`w-2/5 ${swapSides && "ml-auto text-right"}`>
      <h3 class="text-2xl font-bold">
        {title}
      </h3>
      {subtitle && <p class="text-md">{subtitle}</p>}
    </div>

    <!-- Description -->
    <div
      class=`w-3/5 ${descriptionBgColor} px-8 py-4 shadow-lg dark:shadow-gray-600/40 ${swapSides && "ml-auto"}`
    >
      <slot name="description" />
    </div>

    <!-- Tags -->
    {
      tags && (
        <div class={tagsStyle}>
          {tags.map((tag) => (
            <Tag
              text={tag}
              additionalStyles="shadow-lg dark:shadow-indigo-600/40"
            />
          ))}
        </div>
      )
    }
  </div>
</div>
